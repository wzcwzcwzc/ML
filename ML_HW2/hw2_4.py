# -*- coding: utf-8 -*-
"""HW2_4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12raGnxZy8BHsqCLW8MemBCmvVWrHHIwP
"""

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib inline
import numpy as np
import matplotlib
import matplotlib.pyplot as plt
import pandas as pd
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

import pandas as pd
names =[
't',
'q1', 'q2', 'q3',
'dq1', 'dq2', 'dq3',
'I1', 'I2', 'I3',
'eps21', 'eps22', 'eps31', 'eps32',
'ddq1', 'ddq2', 'ddq3'
]
# Time (secs)
# Joint angle
# Joint velocity
# Motor current (A)
# Strain measurements
# Joint accelerations
df = pd.read_csv('/content/exp_train.csv', header=None,sep=',',names=names, index_col=0)
df.head(6)

y = np.array(df.I2)
X = np.array([df.q2,df.dq2, df.eps21, df.eps22, df.eps31, df.eps32, df.ddq2])
X = X.T

# divide data set into train and test parts
train_y = y[0:2666]
train_x = X[0:2666]
test_y = y[2666:]
test_x = X[2666:]

reg = LinearRegression()
reg.fit(train_x, train_y)
test_pre_y = reg.predict(test_x)
mse = mean_squared_error(test_pre_y, test_y)

print(f'the mse of the model is : {mse}')

"""use model to predict result"""

df = pd.read_csv('/content/exp_test.csv', header=None,sep=',',names=names, index_col=0)
test_X = np.array([df.q2,df.dq2, df.eps21, df.eps22, df.eps31, df.eps32, df.ddq2])
test_X = test_X.T
test_Y = reg.predict(test_X)
real_Y = np.array(df.I2)

mse_test = mean_squared_error(test_Y, real_Y)
print(f'the mse of test experiment is : {mse_test}')